// -----------------------------------------------------------------------------
//  G4Basic | PrimaryGeneration.cpp
//
//  Class for the definition of the primary generation action.
//   * Author: Justo Martin-Albo, Taylor Contreras
//   * Creation date: 14 Aug 2019
// -----------------------------------------------------------------------------

#include "PrimaryGeneration.h"
//#include "Kr83mGeneration.h"

#include "TFile.h"

#include <G4ParticleDefinition.hh>
#include <G4SystemOfUnits.hh>
#include <G4IonTable.hh>
#include <G4PrimaryParticle.hh>
#include <G4PrimaryVertex.hh>
#include <G4Event.hh>

PrimaryGeneration::PrimaryGeneration():
  G4VUserPrimaryGeneratorAction(),
  fParticleGun(0)
{
  G4int n_particle = 1;
  fParticleGun = new G4ParticleGun(n_particle);
  
  fParticleGun->SetParticleEnergy(0*eV);
  fParticleGun->SetParticlePosition(G4ThreeVector(0.,0.,0.));
  fParticleGun->SetParticleMomentumDirection(G4ThreeVector(0.,0.,0.);
}


PrimaryGeneration::~PrimaryGeneration()
{
  delete fParticleGun
}


void PrimaryGeneration::GeneratePrimaries(G4Event* event)
{  
  G4int Z = 36;
  G4int A = 83;
  G4double exitEnergy = 41.6*keV;

  // Make Krypton 83 decay
  G4ParticleDefinition* particle_definition = G4IonTable::GetIonTable()->
    GetIon(Z, A, exitEnergy);

  fParticleGun->SetParticleDefinition(ion);
  fParticleGun->GeneratePrimaryVertex(event);


  //if (!particle_definition){
  //  G4Exception("SetParticleDefinition()", "[IonGun]",
  //		FatalException, " can not create ion");
  //}
  
  // Generate an initial position for the particle using the geometry                                                 
  //G4ThreeVector position = new G4ThreeVector(0,0,0); //_geom->GenerateVertex(_region);
  // Particle generated at start-of-event                                                                             
  //G4double time = 0.;
  // Create a new vertex                                                                                              
  //G4PrimaryVertex* vertex = new G4PrimaryVertex(G4ThreeVector(1.,0.,0.), time);

  // Create the new primary particle and set it some properties                                                       
  //G4PrimaryParticle* particle =
  //  new G4PrimaryParticle(particle_definition);

  // Add particle to the vertex and this to the event                                                                 
  //vertex->SetPrimary(particle);
  //event->AddPrimaryVertex(vertex);

  //TFile* MyFile = new TFile("MyFile.root", "UPDATE");

  //G4int num_particles = vertex->GetNumberOfParticle();
  //G4ThreeVector particle_energy = particle->GetMomentum();
  //std::cout << "-------------- Particle momx: " <<particle_energy.x()/keV <<" [keV] -----------------\n";
  //std::cout << "--------------- Number of particles: " << num_particles << " ---------------\n";

  //particle_energy = particle->GetNext();
  
}
